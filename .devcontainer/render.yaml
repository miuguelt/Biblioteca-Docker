# Define services
services:
  # MySQL database service
  db:
    # Use official MySQL image
    image: mysql:9.0.1
    # Environment variables for configuration
    env:
      MYSQL_DATABASE: flaskdb
      MYSQL_ROOT_PASSWORD: my-secret-pw
    # Customize MySQL server settings (optional)
    # Be aware of security implications when exposing these options publicly
    # See Render documentation for secure practices: https://docs.render.com/environment-variables/
    # options:
    #   - --character-set-server=utf8mb4
    #   - --collation-server=utf8mb4_unicode_ci
    #   - --default-time-zone=+02:00

    # Health check configuration (optional)
    # Render already provides basic health checks, modify if needed
    # healthcheck:
    #   test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
    #   interval: 10s
    #   timeout: 5s
    #   retries: 5

    # Mount persistent volume for database data (optional)
    # volumes:
    #   - db-data:/var/lib/mysql # Replace db-data with your volume name

  # Flask application service
  app:
    # Use Python 3.12 slim image
    image: python:3.12-slim
    # Mount application code and pip cache volumes
    volumes:
      - ../app:/workspace
      - ../pip-cache:/root/.cache/pip
    # Specify network for service communication
    networks:
      - app-network
    # Expose port for application access
    ports:
      - "5000:5000"
    # Set environment variables for database connection
    env:
      MYSQL_HOST: db # Reference the db service name
      MYSQL_DATABASE: flaskdb
      MYSQL_USER: root
      MYSQL_PASSWORD: my-secret-pw
    # Define build command for application with requirements and main script
    command: ["sh", "-c", "pip install -r /workspace/requirements.txt && python /workspace/run1.py"]

# Define network for service communication
networks:
  app-network:
    driver: bridge

# Define volumes if needed (optional)
# volumes:
#   db-data: # Local directory to store MySQL data
#   pip-cache: # Local directory to store pip cache